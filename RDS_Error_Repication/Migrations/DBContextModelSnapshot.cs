// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RDS_Error_Repication;

#nullable disable

namespace RDS_Error_Repication.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RDS_Error_Repication.ContactInformationModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CellNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Cell");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Contact_Information", (string)null);
                });

            modelBuilder.Entity("RDS_Error_Repication.CustomerInterestBridge", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CustomerUUID")
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("CategoryId", "CustomerUUID");

                    b.HasIndex("CustomerUUID");

                    b.ToTable("CustomerInterests", (string)null);
                });

            modelBuilder.Entity("RDS_Error_Repication.CustomerModel", b =>
                {
                    b.Property<string>("UUID")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("UUID");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("RDS_Error_Repication.FavouriteProductBridge", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("StoreId")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("ProductId")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("MallId")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<int>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("CustomerId", "StoreId", "ProductId", "MallId");

                    b.ToTable("Customer_Favourite_Products", (string)null);
                });

            modelBuilder.Entity("RDS_Error_Repication.FavouriteStoreBridge", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("StoreId")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("MallId")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<int>("Weight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("CustomerId", "StoreId", "MallId");

                    b.ToTable("Customer_Favourite_Stores", (string)null);
                });

            modelBuilder.Entity("RDS_Error_Repication.POPIInfoModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Marketing")
                        .HasColumnType("boolean");

                    b.Property<bool>("TermsAndConditions")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy")
                        .IsUnique();

                    b.ToTable("Popi_Info", (string)null);
                });

            modelBuilder.Entity("RDS_Error_Repication.ContactInformationModel", b =>
                {
                    b.HasOne("RDS_Error_Repication.CustomerModel", "Customer")
                        .WithOne("ContactInformation")
                        .HasForeignKey("RDS_Error_Repication.ContactInformationModel", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RDS_Error_Repication.CustomerInterestBridge", b =>
                {
                    b.HasOne("RDS_Error_Repication.CustomerModel", "Customer")
                        .WithMany("Interests")
                        .HasForeignKey("CustomerUUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RDS_Error_Repication.FavouriteProductBridge", b =>
                {
                    b.HasOne("RDS_Error_Repication.CustomerModel", "Customer")
                        .WithMany("Products")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RDS_Error_Repication.FavouriteStoreBridge", b =>
                {
                    b.HasOne("RDS_Error_Repication.CustomerModel", "Customer")
                        .WithMany("Stores")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RDS_Error_Repication.POPIInfoModel", b =>
                {
                    b.HasOne("RDS_Error_Repication.CustomerModel", "Customer")
                        .WithOne("PopiInfo")
                        .HasForeignKey("RDS_Error_Repication.POPIInfoModel", "CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RDS_Error_Repication.CustomerModel", b =>
                {
                    b.Navigation("ContactInformation")
                        .IsRequired();

                    b.Navigation("Interests");

                    b.Navigation("PopiInfo")
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
